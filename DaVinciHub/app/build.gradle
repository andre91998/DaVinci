plugins {
    id 'com.android.application'
    id 'com.google.protobuf'
//    id 'org.jetbrains.kotlin.android'
//    id 'org.jetbrains.kotlin.plugin.compose' version '2.0.21'
    //id 'com.android.compose.screenshot' version 'screenshot'
}

android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    compileSdkVersion 35

    defaultConfig {
        applicationId "com.davinci.hub"
        minSdkVersion 24
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug { minifyEnabled false }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }

    namespace 'com.daVinci.hub'
    lint {
        disable 'GoogleAppIndexingWarning', 'HardcodedText', 'InvalidPackage'
        textOutput file('stdout')
        textReport true
    }
}

protobuf {
    protoc { artifact = 'com.google.protobuf:protoc:3.25.1' }
    plugins {
        grpc { artifact = 'io.grpc:protoc-gen-grpc-java:1.69.0' // CURRENT_GRPC_VERSION
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java { option 'lite' }
            }
            task.plugins {
                grpc { // Options added to --grpc_out
                    option 'lite' }
            }
        }
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.0.0'

    // You need to build grpc-java to obtain these libraries below.
    implementation 'io.grpc:grpc-okhttp:1.69.0' // CURRENT_GRPC_VERSION
    implementation 'io.grpc:grpc-protobuf-lite:1.69.0' // CURRENT_GRPC_VERSION
    implementation 'io.grpc:grpc-stub:1.69.0' // CURRENT_GRPC_VERSION
    implementation 'org.apache.tomcat:annotations-api:6.0.53'

    implementation libs.com.android.compose.screenshot.gradle.plugin
    implementation libs.core

    def composeBom = platform(libs.androidx.compose.bom)
    implementation composeBom
    implementation libs.impress
    implementation libs.androidx.arcore
    implementation libs.androidx.scenecore
    implementation libs.androidx.compose
    implementation libs.kotlinx.coroutines.guava

    implementation libs.material
    implementation libs.androidx.compose.material3
    implementation libs.androidx.adaptive.android
    implementation libs.androidx.concurrent.futures
    implementation libs.androidx.compose.runtime
    implementation libs.androidx.activity.compose

    implementation libs.androidx.compose.ui.tooling

    implementation libs.mpandroidchart

    //screenshotTestImplementation(libs.androidx.compose.ui.tooling)

    testImplementation libs.mockito.core
    testImplementation libs.mockito.junit.jupiter
    testImplementation libs.mockito.inline
    testImplementation libs.junit.jupiter.api
    testRuntimeOnly libs.junit.jupiter.engine
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}