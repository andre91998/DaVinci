Step 2: Write the Python Script
Here's the Python script to publish and subscribe to a topic:

python
import paho.mqtt.client as mqtt

# Define the MQTT broker details
broker = "localhost"
port = 1883
topic = "test/topic"

# Callback function when a message is received
def on_message(client, userdata, message):
    print(f"Message received: {message.payload.decode()} on topic {message.topic}")

# Callback function when the client connects to the broker
def on_connect(client, userdata, flags, rc):
    if rc == 0:
        print("Connected to broker")
        client.subscribe(topic)
        # Publish a test message to the topic
        client.publish(topic, "Test message from Python")
    else:
        print(f"Connection failed with code {rc}")

# Create an MQTT client instance
client = mqtt.Client()

# Assign the callback functions
client.on_connect = on_connect
client.on_message = on_message

# Connect to the broker
client.connect(broker, port, 60)

# Start the loop to process received messages
client.loop_forever()
Steps to Run the Script:
Update the script: Replace localhost with the actual address of your MQTT broker if it's running on a different machine.

Run the script: Execute the script in your Python environment. It will connect to your MQTT broker, subscribe to the specified topic, publish a test message, and print any messages received from the broker.